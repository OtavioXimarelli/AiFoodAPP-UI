# AI Food App - Complete configuration for UI + API with improved session handling
server {
    server_name aifoodapp.site www.aifoodapp.site;
    
    # Root directory for static files
    root /var/www/aifoodapp;
    index index.html;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    
    # API routes - proxy to Spring Boot backend
    location /api/ {
        proxy_pass http://localhost:8080/;
        proxy_http_version 1.1;
        
        # Essential proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Cookie and session handling - ESSENTIAL FOR OAUTH2
        proxy_set_header Cookie $http_cookie;
        proxy_pass_request_headers on;
        proxy_pass_request_body on;
        proxy_redirect off;
        proxy_cookie_domain localhost $host;
        proxy_cookie_path / /;
        
        # Connection settings
        proxy_set_header Connection "";
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        
        # Handle WebSocket connections if needed
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Disable proxy caching for dynamic content
        proxy_no_cache 1;
        proxy_cache_bypass 1;
        
        # CORS headers for API endpoints
        add_header 'Access-Control-Allow-Origin' 'https://aifoodapp.site' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-CSRF-TOKEN' always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'https://aifoodapp.site';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-CSRF-TOKEN';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }
    
    # OAuth2 routes - proxy to Spring Boot backend
    location /oauth2/ {
        proxy_pass http://localhost:8080/oauth2/;
        proxy_http_version 1.1;
        
        # Essential proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Cookie and session handling - CRITICAL FOR OAUTH2 FLOW
        proxy_set_header Cookie $http_cookie;
        proxy_pass_request_headers on;
        proxy_pass_request_body on;
        proxy_redirect off;
        proxy_cookie_domain localhost $host;
        proxy_cookie_path / /;
        
        # Timeout settings
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # No caching for OAuth2 flows
        proxy_no_cache 1;
        proxy_cache_bypass 1;
    }
    
    # Login routes - proxy to Spring Boot backend  
    location /login/ {
        proxy_pass http://localhost:8080/login/;
        proxy_http_version 1.1;
        
        # Essential proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Cookie and session handling - CRITICAL FOR OAUTH2 FLOW
        proxy_set_header Cookie $http_cookie;
        proxy_pass_request_headers on;
        proxy_pass_request_body on;
        proxy_redirect off;
        proxy_cookie_domain localhost $host;
        proxy_cookie_path / /;
        
        # Timeout settings
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # No caching for login flows
        proxy_no_cache 1;
        proxy_cache_bypass 1;
    }
    
    # Auth routes - proxy to Spring Boot backend
    location /auth/ {
        proxy_pass http://localhost:8080/auth/;
        proxy_http_version 1.1;
        
        # Essential proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Cookie and session handling - ESSENTIAL FOR SESSION VERIFICATION
        proxy_set_header Cookie $http_cookie;
        proxy_pass_request_headers on;
        proxy_pass_request_body on;
        proxy_redirect off;
        proxy_cookie_domain localhost $host;
        proxy_cookie_path / /;
        
        # Timeout settings
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # No caching for auth endpoints
        proxy_no_cache 1;
        proxy_cache_bypass 1;
    }
    
    # Backend API routes (foods, recipes, etc.)
    location ~ ^/(foods|recipes|health)/ {
        proxy_pass http://localhost:8080;
        proxy_http_version 1.1;
        
        # Essential proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Cookie and session handling - FOR AUTHENTICATED API CALLS
        proxy_set_header Cookie $http_cookie;
        proxy_pass_request_headers on;
        proxy_pass_request_body on;
        proxy_redirect off;
        proxy_cookie_domain localhost $host;
        proxy_cookie_path / /;
        
        # Timeout settings
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # No caching for dynamic API content
        proxy_no_cache 1;
        proxy_cache_bypass 1;
    }
    
    # Actuator endpoints (health checks, etc.)
    location /actuator/ {
        proxy_pass http://localhost:8080/actuator/;
        proxy_http_version 1.1;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Basic headers for monitoring endpoints
        proxy_connect_timeout 10s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
    }
    
    # Static assets with aggressive caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        
        # CORS for static assets
        add_header 'Access-Control-Allow-Origin' '*';
    }
    
    # Service worker and manifest files
    location ~* \.(webmanifest|json)$ {
        expires 1d;
        add_header Cache-Control "public";
        add_header 'Access-Control-Allow-Origin' '*';
    }
    
    # Handle React Router (SPA routing) - this must be LAST
    location / {
        try_files $uri $uri/ /index.html;
        
        # Security headers for HTML files
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        
        # No caching for HTML files
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }
    
    # Logging
    access_log /var/log/nginx/aifoodapp_access.log;
    error_log /var/log/nginx/aifoodapp_error.log;

    # SSL Configuration (managed by Certbot)
    listen [::]:443 ssl ipv6only=on;
    listen 443 ssl;
    ssl_certificate /etc/letsencrypt/live/aifoodapp.site/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/aifoodapp.site/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
}

# HTTP to HTTPS redirect
server {
    listen 80;
    listen [::]:80;
    server_name aifoodapp.site www.aifoodapp.site;
    
    # Redirect all HTTP traffic to HTTPS
    return 301 https://$host$request_uri;
}

# Redirect www to non-www (optional but recommended)
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name www.aifoodapp.site;
    
    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/aifoodapp.site/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/aifoodapp.site/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    
    # Redirect www to non-www
    return 301 https://aifoodapp.site$request_uri;
}
